{% extends 'base.html.twig' %}

{% block title %}Nouveau Planning{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .planning-form {
            background: white;
            border-radius: 8px;
            padding: 2rem;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        .meal-section {
            background: #f8f9fa;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border-radius: 8px;
        }
        .persons-input {
            max-width: 150px;
        }
        .meal-type {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 4px;
            margin-left: 8px;
            font-size: 0.875rem;
            font-weight: bold;
        }
        .meal-type.low_carb {
            background-color: #d4edda;
            color: #155724;
        }
        .meal-type.post_training {
            background-color: #cce5ff;
            color: #004085;
        }
        .meal-type.en_cas {
            background-color: #fff3cd;
            color: #856404;
        }
        .meal-type.autre {
            background-color: #f8f9fa;
            color: #383d41;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container mt-4">
    <div class="planning-form">
        <h1 class="h3 mb-4">Nouveau Planning</h1>

        {{ form_start(form) }}
            <div class="mb-4">
                {{ form_row(form.date, {
                    'label': 'Date du planning',
                    'attr': {
                        'class': 'form-control'
                    }
                }) }}
            </div>

            {% set mealTypes = {
                'petitDejeuner': {'label': 'Petit Déjeuner', 'field': 'nombrePersonnesPetitDejeuner'},
                'encasMatin': {'label': 'En-cas Matin', 'field': 'nombrePersonnesEncasMatin'},
                'dejeuner': {'label': 'Déjeuner', 'field': 'nombrePersonnesDejeuner'},
                'encasApresMidi': {'label': 'En-cas Après-midi', 'field': 'nombrePersonnesEncasApresMidi'},
                'diner': {'label': 'Dîner', 'field': 'nombrePersonnesDiner'}
            } %}

            {% for type, config in mealTypes %}
                <div class="meal-section">
                    <h3 class="h5 mb-3">{{ config.label }}</h3>
                    <div class="row">
                        <div class="col-md-6">
                            {{ form_row(form[type], {
                                'label': 'Recette',
                                'attr': {
                                    'class': 'form-control meal-select',
                                    'data-meal-type': type
                                }
                            }) }}
                        </div>
                        <div class="col-md-4">
                            {{ form_row(form[config.field], {
                                'label': 'Nombre de personnes',
                                'attr': {
                                    'class': 'form-control persons-input',
                                    'min': 1
                                }
                            }) }}
                        </div>
                        <div class="col-md-2">
                            <span class="meal-type" id="mealType_{{ type }}"></span>
                        </div>
                    </div>
                </div>
            {% endfor %}

            <div class="text-center">
                <button class="btn btn-primary">{{ button_label|default('Enregistrer') }}</button>
            </div>
        {{ form_end(form) }}
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const mealSelects = document.querySelectorAll('.meal-select');
            
            function updateMealType(select) {
                const selectedOption = select.options[select.selectedIndex];
                const mealType = selectedOption.getAttribute('data-category');
                const typeSpan = document.getElementById('mealType_' + select.getAttribute('data-meal-type'));
                
                if (mealType) {
                    let displayText = '';
                    switch(mealType) {
                        case 'low_carb':
                            displayText = 'Low-carb';
                            break;
                        case 'post_training':
                            displayText = 'Post-training';
                            break;
                        case 'en_cas':
                            displayText = 'En-cas';
                            break;
                        case 'autre':
                            displayText = 'Autre';
                            break;
                    }
                    typeSpan.textContent = displayText;
                    typeSpan.className = 'meal-type ' + mealType;
                } else {
                    typeSpan.textContent = '';
                    typeSpan.className = 'meal-type';
                }
            }
            
            mealSelects.forEach(select => {
                // Mise à jour initiale
                updateMealType(select);
                
                // Mise à jour lors du changement
                select.addEventListener('change', function() {
                    updateMealType(this);
                });
            });
        });
    </script>
{% endblock %}
