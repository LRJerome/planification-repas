{% extends 'base.html.twig' %}

{% block stylesheets %}
	{{ parent() }}
	<style>
		.recipe-header {
			background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
			padding: 2rem;
			border-radius: 15px;
			margin-bottom: 2rem;
			box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
		}
		.ingredient-list {
			background: #fff;
			border-radius: 10px;
			padding: 1.5rem;
			box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
		}
		.planning-form {
			background: #fff;
			border-radius: 10px;
			padding: 1.5rem;
			box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
		}
		.ingredient-badge {
			font-size: 0.9em;
			padding: 0.5em 1em;
			margin: 0.2em;
			border-radius: 20px;
			background-color: #e9ecef;
			color: #495057;
			display: inline-flex;
			align-items: center;
		}
		.ingredient-badge .quantity {
			background: #6c757d;
			color: white;
			padding: 0.2em 0.6em;
			border-radius: 10px;
			margin-left: 0.5em;
			font-size: 0.9em;
		}
		.description-box {
			background: #fff;
			border-radius: 10px;
			padding: 1.5rem;
			margin-bottom: 2rem;
			box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
		}
	</style>
{% endblock %}

{% block body %}
<div class="container mt-4">
    <div class="row">
        <div class="col-md-8">
            <div class="recipe-header">
                {% if repas.imageName %}
                    <img src="{{ vich_uploader_asset(repas, 'imageFile') }}" 
                         class="img-fluid rounded mb-3" 
                         alt="{{ repas.nom }}"
                         style="max-height: 400px; width: 100%; object-fit: cover;">
                {% endif %}
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h1 class="mb-0">{{ repas.nom }}</h1>
                </div>
                {% if repas.categorie %}
                    <span class="badge bg-primary mb-3">
                        {{ repas.categorie|replace({'_': ' '})|capitalize }}
                    </span>
                {% endif %}
            </div>

            {% if repas.description %}
                <div class="description-box mb-4">
                    <h3 class="mb-3">
                        <i class="fas fa-info-circle me-2"></i>Description
                    </h3>
                    <p>{{ repas.description }}</p>
                </div>
            {% endif %}

            {# Liste des ingrédients #}
            <div class="ingredient-list mb-4">
                <h3 class="mb-3">
                    <i class="fas fa-list me-2"></i>Ingrédients
                    {% if nombrePersonnes is null %}
                        <small class="text-warning">
                            <i class="fas fa-exclamation-triangle me-1"></i>
                            Attention : quantités par défaut
                        </small>
                    {% else %}
                        <small class="text-info">
                            <i class="fas fa-users me-1"></i>
                            Pour {{ nombrePersonnes }} personne(s)
                        </small>
                    {% endif %}
                </h3>
                {% if repas.ingredientQuantites is not empty %}
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Ingrédient</th>
                                    <th>Quantité</th>
                                    <th>Unité</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for ingredientQuantite in repas.ingredientQuantites %}
                                    <tr>
                                        <td>{{ ingredientQuantite.ingredient.nom }}</td>
                                        <td>
                                            {% if nombrePersonnes is not null %}
                                                {{ ingredientQuantite.quantite * nombrePersonnes }}
                                            {% else %}
                                                {{ ingredientQuantite.quantite }}
                                            {% endif %}
                                        </td>
                                        <td>{{ ingredientQuantite.ingredient.unite }}</td>
                                    </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                {% else %}
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        Aucun ingrédient n'est associé à cette recette.
                    </div>
                {% endif %}
            </div>

            {% if repas.recette %}
                <div class="description-box">
                    <h3 class="mb-3">
                        <i class="fas fa-book me-2"></i>Instructions
                    </h3>
                    <div class="recipe-text">
                        {{ repas.recette|nl2br }}
                    </div>
                </div>
            {% endif %}
        </div>

			<div class="col-md-4">
				<div class="planning-form">
					<h3 class="mb-3">
						<i class="fas fa-calendar-plus me-2"></i>Ajouter au planning
					</h3>
					<form action="{{ path('planning_add_repas', {'id': repas.id}) }}" 
						  method="post" 
						  data-add-to-planning="true">
						<div class="mb-3">
							<label for="date" class="form-label">Date</label>
							<input type="date" id="date" name="date" class="form-control" required min="{{ "now"|date('Y-m-d') }}">
						</div>

						<div class="mb-3">
							<label for="type" class="form-label">Moment du repas</label>
							<select id="type" name="type" class="form-select" required>
								<option value="petitDejeuner" {% if repas.categorie == 'petit_dejeuner' %} selected {% endif %}>Petit Déjeuner</option>
								<option value="encasMatin" {% if repas.categorie == 'encas_matin' %} selected {% endif %}>En-cas Matin</option>
								<option value="dejeuner" {% if repas.categorie == 'dejeuner' %} selected {% endif %}>Déjeuner</option>
								<option value="encasApresMidi" {% if repas.categorie == 'encas_apres_midi' %} selected {% endif %}>En-cas Après-midi</option>
								<option value="diner" {% if repas.categorie == 'diner' %} selected {% endif %}>Dîner</option>
							</select>
						</div>

						<div class="mb-3" id="nombrePersonnesGroup">
							<label for="nombrePersonnes" class="form-label">Nombre de personnes</label>
							<input type="number" id="nombrePersonnes" name="nombrePersonnes" class="form-control" min="1" value="1" required>
						</div>

						<button type="submit" class="btn btn-primary w-100 mb-3">
							<i class="fas fa-plus me-2"></i>Ajouter au planning
						</button>
					</form>
				</div>
				
				<div class="mt-3 text-center">
					<a href="{{ path('index') }}" class="btn btn-secondary w-100">
						<i class="fas fa-arrow-left me-2"></i>Retour à la liste
					</a>
				</div>
			</div>
		</div>
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script>
		document.addEventListener('DOMContentLoaded', function() {
			console.log('DOM loaded'); // Debug
			const form = document.querySelector('form[data-add-to-planning="true"]');
			console.log('Form found:', form); // Debug
			
			if (form) {
				form.addEventListener('submit', function(e) {
					e.preventDefault();
					console.log('Form submitted'); // Debug
					
					// Créer les données du formulaire
					const formData = new FormData(form);
					
					// Log les données du formulaire
					for (let [key, value] of formData.entries()) {
						console.log(`${key}: ${value}`); // Debug
					}
					
					// Première requête pour vérifier si un repas existe
					fetch(form.action, {
						method: 'POST',
						body: formData,
						headers: {
							'Accept': 'application/json',
							'X-Requested-With': 'XMLHttpRequest'
						}
					})
					.then(response => {
						console.log('Response status:', response.status); // Debug
						return response.text().then(text => {
							console.log('Raw response:', text); // Debug
							try {
								return JSON.parse(text);
							} catch (e) {
								console.log('JSON parse error:', e); // Debug
								throw new Error('Invalid JSON response');
							}
						});
					})
					.then(data => {
						console.log('Parsed data:', data); // Debug
						
						if (data.needConfirmation) {
							console.log('Confirmation needed'); // Debug
							if (!confirm(data.message)) {
								console.log('User cancelled'); // Debug
								return null;
							}
							
							console.log('User confirmed, sending force request'); // Debug
							formData.append('force', 'true');
							return fetch(form.action, {
								method: 'POST',
								body: formData,
								headers: {
									'Accept': 'application/json',
									'X-Requested-With': 'XMLHttpRequest'
								}
							});
						}
						
						window.location.href = '{{ path('index') }}';
						return null;
					})
					.then(response => {
						if (response) {
							console.log('Force response status:', response.status); // Debug
							return response.json();
						}
						return null;
					})
					.then(data => {
						console.log('Final response:', data); // Debug
						if (data && data.success) {
							window.location.href = '{{ path('index') }}';
						}
					})
					.catch(error => {
						console.error('Error:', error);
						alert('Une erreur est survenue lors de l\'ajout au planning.');
					});
				});
			} else {
				console.error('Planning form not found'); // Debug
			}
		});
	</script>
{% endblock %}
